<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JIRA Pipline Steps on </title>
    <link>https://jenkinsci.github.io/jira-steps-plugin/</link>
    <description>Recent content in JIRA Pipline Steps on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 12 Nov 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://jenkinsci.github.io/jira-steps-plugin/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>UploadAttachment</title>
      <link>https://jenkinsci.github.io/jira-steps-plugin/steps/attachment/jira_upload_attachment/</link>
      <pubDate>Wed, 14 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jenkinsci.github.io/jira-steps-plugin/steps/attachment/jira_upload_attachment/</guid>
      <description>jiraUploadAttachment This step uploads a file from worksapce to issue.
Input  idOrKey - Issue Id or Key. file - File name with/without path from workspace. Ex: test.txt or test/test.txt. site - Optional, default: JIRA_SITE environment variable. failOnError - Optional. default: true.  For more information about input, please refer to the model objects in the API package.
 Output  Each step generates generic output, please refer to this link for more information.</description>
    </item>
    
    <item>
      <title>Server Info</title>
      <link>https://jenkinsci.github.io/jira-steps-plugin/steps/admin/jira_server_info/</link>
      <pubDate>Mon, 08 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jenkinsci.github.io/jira-steps-plugin/steps/admin/jira_server_info/</guid>
      <description>jiraGetServerInfo This step retrives the server info.
Input  site - Optional, default: JIRA_SITE environment variable. failOnError - Optional. default: true.  Output  Each step generates generic output, please refer to this link for more information. The api response of this jira_jql_search step can be reused later in your script by doing response.data.required_field_name. You can see some example scenarios here All the available fields for a jira response can be found in JIRA API documentation depending on your JIRA version.</description>
    </item>
    
    <item>
      <title>Authentication</title>
      <link>https://jenkinsci.github.io/jira-steps-plugin/getting-started/config/authentication/</link>
      <pubDate>Sun, 12 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jenkinsci.github.io/jira-steps-plugin/getting-started/config/authentication/</guid>
      <description>Authentication This plugin supports both Basic and OAuth, OAuth is preferred over the Basic authentication.
Basic Authentication  Goto Manage Jenkins &amp;gt; Configure System &amp;gt; JIRA Steps &amp;gt; Add Site &amp;gt; Choose Basic.  Name = Jira Site Name URL = Jira Site URL User Name = Jira Account Username Password = Jira Account Password   Please take note that above screenshot missing ReadTimeout(ms) OAuth Authentication  Follow the jira-rest-api-oauth-authentication guide to setup OAuth Authentication.</description>
    </item>
    
    <item>
      <title>Create New Fix Version</title>
      <link>https://jenkinsci.github.io/jira-steps-plugin/getting-started/examples/new_fix_version/</link>
      <pubDate>Sun, 12 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jenkinsci.github.io/jira-steps-plugin/getting-started/examples/new_fix_version/</guid>
      <description> Add new fix version to existing issue.  JQL Search. Create new version. Edit an issue.  node { stage(&#39;JIRA&#39;) { def searchResults = jiraJqlSearch jql: &amp;quot;project = TEST AND issuekey = &#39;TEST-1&#39;&amp;quot; def issues = searchResults.data.issues for (i = 0; i &amp;lt;issues.size(); i++) { def fixVersion = jiraNewVersion version: [name: &amp;quot;new-fix-version-1.0&amp;quot;, project: &amp;quot;TEST&amp;quot;] def testIssue = [fields: [fixVersions: [fixVersion.data]]] response = jiraEditIssue idOrKey: issues[i].key, issue: testIssue } } }  </description>
    </item>
    
    <item>
      <title>GetComment</title>
      <link>https://jenkinsci.github.io/jira-steps-plugin/steps/comment/jira_get_comment/</link>
      <pubDate>Sun, 12 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jenkinsci.github.io/jira-steps-plugin/steps/comment/jira_get_comment/</guid>
      <description>jiraGetComment This step queries a particular comment on an issue.
Input  idOrKey - Issue id or key. commentId - commentId. site - Optional, default: JIRA_SITE environment variable. failOnError - Optional. default: true.  For more information about input, please refer to the model objects in the API package.
 Output  Each step generates generic output, please refer to this link for more information. The api response of this jira_get_comment step can be reused later in your script by doing response.</description>
    </item>
    
    <item>
      <title>GetComponent</title>
      <link>https://jenkinsci.github.io/jira-steps-plugin/steps/component/jira_get_component/</link>
      <pubDate>Sun, 12 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jenkinsci.github.io/jira-steps-plugin/steps/component/jira_get_component/</guid>
      <description>jiraGetComponent This step queries a particular component from the provided JIRA site.
Input  id - componentId. site - Optional, default: JIRA_SITE environment variable. failOnError - Optional. default: true.  For more information about input, please refer to the model objects in the API package.
 Output  Each step generates generic output, please refer to this link for more information. The api response of this jira_get_component step can be reused later in your script by doing response.</description>
    </item>
    
    <item>
      <title>GetFields</title>
      <link>https://jenkinsci.github.io/jira-steps-plugin/steps/issue/jira_get_fields/</link>
      <pubDate>Sun, 12 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jenkinsci.github.io/jira-steps-plugin/steps/issue/jira_get_fields/</guid>
      <description>jiraGetFields This step queries all fields from the provided JIRA site.
Input  site - Optional, default: JIRA_SITE environment variable. failOnError - Optional. default: true.  Output  Each step generates generic output, please refer to this link for more information. The api response of this jira_get_fields step can be reused later in your script by doing response.data.required_field_name. You can see some example scenarios here All the available fields for a jira response can be found in JIRA API documentation depending on your JIRA version.</description>
    </item>
    
    <item>
      <title>GetIssueLink</title>
      <link>https://jenkinsci.github.io/jira-steps-plugin/steps/issuelink/jira_get_issuelink/</link>
      <pubDate>Sun, 12 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jenkinsci.github.io/jira-steps-plugin/steps/issuelink/jira_get_issuelink/</guid>
      <description>jiraGetIssueLink This step queries issue links from the provided JIRA site.
Input  id - issue link&amp;rsquo;s id. site - Optional, default: JIRA_SITE environment variable. failOnError - Optional. default: true.  Output  Each step generates generic output, please refer to this link for more information. The api response of this jira_get_issuelink step can be reused later in your script by doing response.data.required_field_name. You can see some example scenarios here All the available fields for a jira response can be found in JIRA API documentation depending on your JIRA version.</description>
    </item>
    
    <item>
      <title>GetIssueWatches</title>
      <link>https://jenkinsci.github.io/jira-steps-plugin/steps/watcher/jira_get_issue_watches/</link>
      <pubDate>Sun, 12 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jenkinsci.github.io/jira-steps-plugin/steps/watcher/jira_get_issue_watches/</guid>
      <description>jiraGetIssueWatches This step queries all the issue watchers on a particular issue.
Input  idOrKey - Issue id or key. site - Optional, default: JIRA_SITE environment variable. failOnError - Optional. default: true.  For more information about input, please refer to the model objects in the API package.
 Output  Each step generates generic output, please refer to this link for more information. The api response of this jira_get_issue_watches step can be reused later in your script by doing response.</description>
    </item>
    
    <item>
      <title>GetProject</title>
      <link>https://jenkinsci.github.io/jira-steps-plugin/steps/project/jira_get_project/</link>
      <pubDate>Sun, 12 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jenkinsci.github.io/jira-steps-plugin/steps/project/jira_get_project/</guid>
      <description>jiraGetProject This queries project info from the provided JIRA site.
Input  idOrKey - project id or key. site - Optional, default: JIRA_SITE environment variable. failOnError - Optional. default: true.  For more information about input, please refer to the model objects in the API package.
 Output  Each step generates generic output, please refer to this link for more information. The api response of this jira_get_project step can be reused later in your script by doing response.</description>
    </item>
    
    <item>
      <title>JqlSearch</title>
      <link>https://jenkinsci.github.io/jira-steps-plugin/steps/search/jira_jql_search/</link>
      <pubDate>Sun, 12 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jenkinsci.github.io/jira-steps-plugin/steps/search/jira_jql_search/</guid>
      <description>jiraJqlSearch This step searches issues from the provided JIRA site by Jql.
Input  jql - jql as a string. site - Optional, default: JIRA_SITE environment variable. failOnError - Optional. default: true.  It supports all the fields that any jira instance supports including custom fields. For more information about all available input fields, please refer to the JIRA API documentation depending on your JIRA version.
 Output  Each step generates generic output, please refer to this link for more information.</description>
    </item>
    
    <item>
      <title>NewVersion</title>
      <link>https://jenkinsci.github.io/jira-steps-plugin/steps/version/jira_new_version/</link>
      <pubDate>Sun, 12 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jenkinsci.github.io/jira-steps-plugin/steps/version/jira_new_version/</guid>
      <description>jiraNewVersion Creates new version based on given input, which should have some minimal information on that object.
Input  version - version to be created. site - Optional, default: JIRA_SITE environment variable. failOnError - Optional. default: true. auditLog - Optional. default: true. Append the build url and build user name to the description.  It supports all the fields that any jira instance supports including custom fields. For more information about all available input fields, please refer to the JIRA API documentation depending on your JIRA version.</description>
    </item>
    
    <item>
      <title>UserSearch</title>
      <link>https://jenkinsci.github.io/jira-steps-plugin/steps/user/jira_user_search/</link>
      <pubDate>Sun, 12 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jenkinsci.github.io/jira-steps-plugin/steps/user/jira_user_search/</guid>
      <description>jiraUserSearch This step searches users by name, username or email address form the JIRA SITE.
Input  queryStr - name, username or email address. (partial string are allowed) site - Optional, default: JIRA_SITE environment variable. failOnError - Optional. default: true.  It supports all the fields that any jira instance supports including custom fields. For more information about all available input fields, please refer to the JIRA API documentation depending on your JIRA version.</description>
    </item>
    
    <item>
      <title>Install</title>
      <link>https://jenkinsci.github.io/jira-steps-plugin/getting-started/install/</link>
      <pubDate>Sat, 21 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jenkinsci.github.io/jira-steps-plugin/getting-started/install/</guid>
      <description> Jenkins provides a couple of different methods for installing plugins
Installing from UI.  Installing Plugin From Web UI Updating Plugin  Manual installation - For snapshots  Clone the repository. Run mvn package to build a deployable hpi bundle for Jenkins. jira-steps.hpi file can be found in jira-steps-plugin/target folder. For more information Advanced installation  This plugin REQUIRES JDK 1.8 to build.
 </description>
    </item>
    
    <item>
      <title>GetAttachmentInfo</title>
      <link>https://jenkinsci.github.io/jira-steps-plugin/steps/attachment/jira_get_attachment_info/</link>
      <pubDate>Wed, 14 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jenkinsci.github.io/jira-steps-plugin/steps/attachment/jira_get_attachment_info/</guid>
      <description>jiraGetAttachmentInfo This step queries a particular attachment&amp;rsquo;s info on an issue.
Input  id - Attachment Id. site - Optional, default: JIRA_SITE environment variable. failOnError - Optional. default: true.  For more information about input, please refer to the model objects in the API package.
 Output  Each step generates generic output, please refer to this link for more information. The api response of this step can be reused later in your script by doing response.</description>
    </item>
    
    <item>
      <title>AddWatcher</title>
      <link>https://jenkinsci.github.io/jira-steps-plugin/steps/watcher/jira_add_watcher/</link>
      <pubDate>Sun, 12 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jenkinsci.github.io/jira-steps-plugin/steps/watcher/jira_add_watcher/</guid>
      <description>jiraAddWatcher This step adds a user as watcher to a particular issue.
Input  idOrKey - Issue id or key. userName - username of the person who should be added as a watcher. site - Optional, default: JIRA_SITE environment variable. failOnError - Optional. default: true.  It supports all the fields that any jira instance supports including custom fields. For more information about all available input fields, please refer to the JIRA API documentation depending on your JIRA version.</description>
    </item>
    
    <item>
      <title>Append Fix Version</title>
      <link>https://jenkinsci.github.io/jira-steps-plugin/getting-started/examples/append_fix_version/</link>
      <pubDate>Sun, 12 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jenkinsci.github.io/jira-steps-plugin/getting-started/examples/append_fix_version/</guid>
      <description>Append new fix version to existing issue.  JQL Search. Create new version. Edit an issue.  node { stage(&#39;JIRA&#39;) { def searchResults = jiraJqlSearch jql: &amp;quot;project = TEST AND issuekey = &#39;TEST-1&#39;&amp;quot; def issues = searchResults.data.issues for (i = 0; i &amp;lt;issues.size(); i++) { def result = jiraGetIssue idOrKey: issues[i].key def newVersion = jiraNewVersion version: [name: &amp;quot;new-fix-version-1.1&amp;quot;, project: &amp;quot;TEST&amp;quot;] def fixVersions = result.data.fields.fixVersions &amp;lt;&amp;lt; newVersion.data def testIssue = [fields: [fixVersions: fixVersions]] response = jiraEditIssue idOrKey: issues[i].</description>
    </item>
    
    <item>
      <title>AssignableUserSearch</title>
      <link>https://jenkinsci.github.io/jira-steps-plugin/steps/user/jira_assignable_user_search/</link>
      <pubDate>Sun, 12 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jenkinsci.github.io/jira-steps-plugin/steps/user/jira_assignable_user_search/</guid>
      <description>jiraAssignableUserSearch This step searches for a user by name, username or email address and assigns them to given project and/or issueKey.
Input  queryStr - name, username or email address. (partial string are allowed) project - project key. Either project or issueKey is mandatory. issueKey - issue key. Either project or issueKey is mandatory. site - Optional, default: JIRA_SITE environment variable. failOnError - Optional. default: true.  It supports all the fields that any jira instance supports including custom fields.</description>
    </item>
    
    <item>
      <title>Common Config</title>
      <link>https://jenkinsci.github.io/jira-steps-plugin/getting-started/config/common/</link>
      <pubDate>Sun, 12 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jenkinsci.github.io/jira-steps-plugin/getting-started/config/common/</guid>
      <description>Optional Params for all Steps.  site - Optional param which will override JIRA_SITE global variable. failOnError - is optional and by default it is true.  When set to true, then the step will abort the job as a failure when there is an error sending message. To make it false, it should always be provided as global environment variable JIRA_FAIL_ON_ERROR.
 Global Environment Variables.  JIRA_SITE - Global variable to set default site for all JIRA steps.</description>
    </item>
    
    <item>
      <title>GetComments</title>
      <link>https://jenkinsci.github.io/jira-steps-plugin/steps/comment/jira_get_comments/</link>
      <pubDate>Sun, 12 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jenkinsci.github.io/jira-steps-plugin/steps/comment/jira_get_comments/</guid>
      <description>jiraGetComments This step queries all comments on a particular issue.
Input  idOrKey - Issue id or key. site - Optional, default: JIRA_SITE environment variable. failOnError - Optional. default: true.  For more information about input, please refer to the model objects in the api package.
 Output  Each step generates generic output, please refer to this link for more information. The api response of this jira_get_comments step can be reused later in your script by doing response.</description>
    </item>
    
    <item>
      <title>GetIssueLinkTypes</title>
      <link>https://jenkinsci.github.io/jira-steps-plugin/steps/issuelink/jira_get_issue_link_types/</link>
      <pubDate>Sun, 12 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jenkinsci.github.io/jira-steps-plugin/steps/issuelink/jira_get_issue_link_types/</guid>
      <description>jiraGetIssueLinkTypes This step queries all issue links types from the provided JIRA site.
Input  site - Optional, default: JIRA_SITE environment variable. failOnError - Optional. default: true.  It supports all the fields that any jira instance supports including custom fields. For more information about all available input fields, please refer to the JIRA API documentation depending on your JIRA version.
 Output  Each step generates generic output, please refer to this link for more information.</description>
    </item>
    
    <item>
      <title>GetProjects</title>
      <link>https://jenkinsci.github.io/jira-steps-plugin/steps/project/jira_get_projects/</link>
      <pubDate>Sun, 12 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jenkinsci.github.io/jira-steps-plugin/steps/project/jira_get_projects/</guid>
      <description>jiraGetProjects This step queries all projects from the provided JIRA site.
Input  site - Optional, default: JIRA_SITE environment variable. failOnError - Optional. default: true.  For more information about input, please refer to the model objects in the API package.
 Output  Each step generates generic output, please refer to this link for more information. The api response of this jira_get_projects step can be reused later in your script by doing response.</description>
    </item>
    
    <item>
      <title>GetVersion</title>
      <link>https://jenkinsci.github.io/jira-steps-plugin/steps/version/jira_get_version/</link>
      <pubDate>Sun, 12 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jenkinsci.github.io/jira-steps-plugin/steps/version/jira_get_version/</guid>
      <description>jiraGetVersion This step queries the project version from the provided JIRA site.
Input  id - version id. site - Optional, default: JIRA_SITE environment variable. failOnError - Optional. default: true.  For more information about input, please refer to the model objects in the API package.
 Output  Each step generates generic output, please refer to this link for more information. The api response of this jira_get_version step can be reused later in your script by doing response.</description>
    </item>
    
    <item>
      <title>NewComponent</title>
      <link>https://jenkinsci.github.io/jira-steps-plugin/steps/component/jira_new_component/</link>
      <pubDate>Sun, 12 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jenkinsci.github.io/jira-steps-plugin/steps/component/jira_new_component/</guid>
      <description>jiraNewComponent Create new component based on given input, which should have some minimal information on that object.
Input  component - component to be created. site - Optional, default: JIRA_SITE environment variable. failOnError - Optional. default: true. auditLog - Optional. default: true. Append the build url and build user name to the description.  It supports all the fields that any jira instance supports including custom fields. For more information about all available input fields, please refer to the JIRA API documentation depending on your JIRA version.</description>
    </item>
    
    <item>
      <title>NewIssue</title>
      <link>https://jenkinsci.github.io/jira-steps-plugin/steps/issue/jira_new_issue/</link>
      <pubDate>Sun, 12 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jenkinsci.github.io/jira-steps-plugin/steps/issue/jira_new_issue/</guid>
      <description>jiraNewIssue Creates new issue based on given input, which should have some minimal information on that object.
Input  issue - issue to be created. site - Optional, default: JIRA_SITE environment variable. failOnError - Optional. default: true. auditLog - Optional. default: true. Append a panel to the comment with the build url and build user name.  It supports all the fields that any jira instance supports including custom fields.</description>
    </item>
    
    <item>
      <title>DownloadAttachment</title>
      <link>https://jenkinsci.github.io/jira-steps-plugin/steps/attachment/jira_download_attachment/</link>
      <pubDate>Wed, 14 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jenkinsci.github.io/jira-steps-plugin/steps/attachment/jira_download_attachment/</guid>
      <description>jiraDownloadAttachment This step downloads the attachment of an issue to given location in workspace.
Input  id - Attachment Id. file - Target location including file name. Ex: test.txt or test/test.txt override - Overrides an existing file. Defaults to false. site - Optional, default: JIRA_SITE environment variable. failOnError - Optional. default: true.  For more information about input, please refer to the model objects in the API package.
 Output  Each step generates generic output, please refer to this link for more information.</description>
    </item>
    
    <item>
      <title>AddComment</title>
      <link>https://jenkinsci.github.io/jira-steps-plugin/steps/comment/jira_add_comment/</link>
      <pubDate>Sun, 12 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jenkinsci.github.io/jira-steps-plugin/steps/comment/jira_add_comment/</guid>
      <description>jiraAddComment This step adds a comment on a particular issue.
Input  idOrKey - Issue id or key. input - comment, supports jira wiki formatting. site - Optional, default: JIRA_SITE environment variable. failOnError - Optional. default: true. auditLog - Optional. default: true. Append a panel to the comment with the build url and build user name. Deprecated: comment - comment, supports jira wiki formatting.  It supports all the fields that any jira instance supports including custom fields.</description>
    </item>
    
    <item>
      <title>EditComponent</title>
      <link>https://jenkinsci.github.io/jira-steps-plugin/steps/component/jira_edit_component/</link>
      <pubDate>Sun, 12 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jenkinsci.github.io/jira-steps-plugin/steps/component/jira_edit_component/</guid>
      <description>jiraEditComponent Edit component based on given input, which should have some minimal information on that object.
Sometimes it may not possible to directly edit component (rename it) without un tagging all of its current JIRAs.
 Input  id - component id. (Note: Applicable only from version 1.3.0) component - component to be edited. site - Optional, default: JIRA_SITE environment variable. failOnError - Optional. default: true. auditLog - Optional. default: true.</description>
    </item>
    
    <item>
      <title>EditVersion</title>
      <link>https://jenkinsci.github.io/jira-steps-plugin/steps/version/jira_edit_version/</link>
      <pubDate>Sun, 12 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jenkinsci.github.io/jira-steps-plugin/steps/version/jira_edit_version/</guid>
      <description>jiraEditVersion Edit version based on given input, which should have some minimal information on that object.
Note: Sometimes it may not possible to directly edit version (rename it) without un tagging all of its current JIRAs.
TODO: probably we should try move version
Input  id - version id. (Note: Applicable only from version 1.3.0) version - version to be edited. site - Optional, default: JIRA_SITE environment variable. failOnError - Optional.</description>
    </item>
    
    <item>
      <title>GetProjectComponents</title>
      <link>https://jenkinsci.github.io/jira-steps-plugin/steps/project/jira_get_project_components/</link>
      <pubDate>Sun, 12 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jenkinsci.github.io/jira-steps-plugin/steps/project/jira_get_project_components/</guid>
      <description>jiraGetProjectComponents This step queries all components of a particular project.
Input  idOrKey - project id or key. site - Optional, default: JIRA_SITE environment variable. failOnError - Optional. default: true.  Output  Each step generates generic output, please refer to this link for more information. The api response of this jira_get_project_components step can be reused later in your script by doing response.data.required_field_name. You can see some example scenarios here All the available fields for a jira response can be found in JIRA API documentation depending on your JIRA version.</description>
    </item>
    
    <item>
      <title>GetRemoteIssueLink</title>
      <link>https://jenkinsci.github.io/jira-steps-plugin/steps/issuelink/jira_get_remote_issuelink/</link>
      <pubDate>Sun, 12 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jenkinsci.github.io/jira-steps-plugin/steps/issuelink/jira_get_remote_issuelink/</guid>
      <description>jiraGetRemoteIssueLink This step queries a particular remote link of an issue.
Input  idOrKey - issue id or key. linkId - remote link id. site - Optional, default: JIRA_SITE environment variable. failOnError - Optional. default: true.  Output  Each step generates generic output, please refer to this link for more information. The api response of this jira_get_remote_issue_link step can be reused later in your script by doing response.data.required_field_name. You can see some example scenarios here All the available fields for a jira response can be found in JIRA API documentation depending on your JIRA version.</description>
    </item>
    
    <item>
      <title>Jenkins Script</title>
      <link>https://jenkinsci.github.io/jira-steps-plugin/getting-started/config/script/</link>
      <pubDate>Sun, 12 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jenkinsci.github.io/jira-steps-plugin/getting-started/config/script/</guid>
      <description>Automate configuring via Jenkins Script Console The following Jenkins Script Console script will automatically configure the global settings of this plugin.
import net.sf.json.JSONArray import net.sf.json.JSONObject import org.thoughtslive.jenkins.plugins.jira.Config import org.thoughtslive.jenkins.plugins.jira.Site //global user-defined configuration JSONArray sites = [ [ name: &#39;another&#39;, url: &#39;http://example.com&#39;, timeout: 10000, readTimeout: 10000, loginType: &#39;BASIC&#39;, userName: &#39;foo&#39;, password: &#39;some pass&#39; ], [ name: &#39;moar jira&#39;, url: &#39;http://example.com&#39;, timeout: 10000, readTimeout: 10000, loginType: &#39;OAUTH&#39;, consumerKey: &#39;my consumer key&#39;, privateKey: &#39;my private key&#39;, secret: &#39;super secret&#39;, token: &#39;my token&#39; ] ] as JSONArray //get global Jenkins configuration Config.</description>
    </item>
    
    <item>
      <title>NewIssues</title>
      <link>https://jenkinsci.github.io/jira-steps-plugin/steps/issue/jira_new_issues/</link>
      <pubDate>Sun, 12 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jenkinsci.github.io/jira-steps-plugin/steps/issue/jira_new_issues/</guid>
      <description>jiraNewIssues This step creates new issues in bulk in the provided JIRA site.
Input  issues - issues to be created. site - Optional, default: JIRA_SITE environment variable. failOnError - Optional. default: true. auditLog - Optional. default: true. Append a panel to the comment with the build url and build user name.  It supports all the fields that any jira instance supports including custom fields. For more information about all available input fields, please refer to the JIRA API documentation depending on your JIRA version.</description>
    </item>
    
    <item>
      <title>Releasing a Project?</title>
      <link>https://jenkinsci.github.io/jira-steps-plugin/getting-started/examples/release_project/</link>
      <pubDate>Sun, 12 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jenkinsci.github.io/jira-steps-plugin/getting-started/examples/release_project/</guid>
      <description>Releasing a project? For instance, if you are releasing more than one project and you want to create a release review jira issue, add Description, Fix version, comment on the issue with error message for a failure in the release process or close the issue, if release is successful.
 Create new Release review JIRA. Release your project. Create new fix version, just to tag a release review JIRA. Close issue if when releasing that project is successful.</description>
    </item>
    
    <item>
      <title>DeleteAttachment</title>
      <link>https://jenkinsci.github.io/jira-steps-plugin/steps/attachment/jira_delete_attachment/</link>
      <pubDate>Wed, 14 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jenkinsci.github.io/jira-steps-plugin/steps/attachment/jira_delete_attachment/</guid>
      <description>jiraDeleteAttachment This step deletes the attachment from an issue.
Input  id - Attachment Id. site - Optional, default: JIRA_SITE environment variable. failOnError - Optional. default: true.  For more information about input, please refer to the model objects in the API package.
 Output  Each step generates generic output, please refer to this link for more information. The api response of this step can be reused later in your script by doing response.</description>
    </item>
    
    <item>
      <title>AssignIssue</title>
      <link>https://jenkinsci.github.io/jira-steps-plugin/steps/issue/jira_assign_issue/</link>
      <pubDate>Sun, 12 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jenkinsci.github.io/jira-steps-plugin/steps/issue/jira_assign_issue/</guid>
      <description>jiraAssignIssue This step assigns a particular issue to a user.
Input  idOrKey - Issue id or key. userName - username of the person who should be added as a watcher. site - Optional, default: JIRA_SITE environment variable. failOnError - Optional. default: true.  It supports all the fields that any jira instance supports including custom fields. For more information about all available input fields, please refer to the JIRA API documentation depending on your JIRA version.</description>
    </item>
    
    <item>
      <title>EditComment</title>
      <link>https://jenkinsci.github.io/jira-steps-plugin/steps/comment/jira_edit_comment/</link>
      <pubDate>Sun, 12 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jenkinsci.github.io/jira-steps-plugin/steps/comment/jira_edit_comment/</guid>
      <description>jiraEditComment This step updates a particular comment on particular issue.
Input  idOrKey - Issue id or key. commentId - comment id. input - comment, supports jira wiki formatting. site - Optional, default: JIRA_SITE environment variable. failOnError - Optional. default: true. Deprecated: comment - comment, supports jira wiki formatting.  It supports all the fields that any jira instance supports including custom fields. For more information about all available input fields, please refer to the JIRA Api documentation depending on your JIRA version.</description>
    </item>
    
    <item>
      <title>GetComponentIssueCount</title>
      <link>https://jenkinsci.github.io/jira-steps-plugin/steps/component/jira_get_component_issue_count/</link>
      <pubDate>Sun, 12 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jenkinsci.github.io/jira-steps-plugin/steps/component/jira_get_component_issue_count/</guid>
      <description>jiraGetComponentIssueCount This step queries a particular component&amp;rsquo;s issue-count.
Input  id - componentId. site - Optional, default: JIRA_SITE environment variable. failOnError - Optional. default: true.  For more information about input, please refer to the model objects in the API package.
 Output  Each step generates generic output, please refer to this link for more information. The api response of this jira_get_component_issue_count step can be reused later in your script by doing response.</description>
    </item>
    
    <item>
      <title>GetIssue</title>
      <link>https://jenkinsci.github.io/jira-steps-plugin/steps/issue/jira_get_issue/</link>
      <pubDate>Sun, 12 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jenkinsci.github.io/jira-steps-plugin/steps/issue/jira_get_issue/</guid>
      <description>jiraGetIssue This step queries a particular issue from the provided JIRA site.
Input  idOrKey - Issue id or key. site - Optional, default: JIRA_SITE environment variable. failOnError - Optional. default: true.  For more information about input, please refer to the model objects in the API package.
 Output  Each step generates generic output, please refer to this link for more information. The api response of this jira_get_issue step can be reused later in your script by doing response.</description>
    </item>
    
    <item>
      <title>GetProjectStatuses</title>
      <link>https://jenkinsci.github.io/jira-steps-plugin/steps/project/jira_get_project_statuses/</link>
      <pubDate>Sun, 12 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jenkinsci.github.io/jira-steps-plugin/steps/project/jira_get_project_statuses/</guid>
      <description>jiraGetProjectStatuses This step queries all the statuses of a particular project.
Input  idOrKey - project id or key. site - Optional, default: JIRA_SITE environment variable. failOnError - Optional. default: true.  Output  Each step generates generic output, please refer to this link for more information. The api response of this jira_get_project_statuses step can be reused later in your script by doing response.data.required_field_name. You can see some example scenarios here All the available fields for a jira response can be found in JIRA API documentation depending on your JIRA version.</description>
    </item>
    
    <item>
      <title>GetRemoteIssueLinks</title>
      <link>https://jenkinsci.github.io/jira-steps-plugin/steps/issuelink/jira_get_remote_issuelinks/</link>
      <pubDate>Sun, 12 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jenkinsci.github.io/jira-steps-plugin/steps/issuelink/jira_get_remote_issuelinks/</guid>
      <description>jiraGetRemoteIssueLinks This step queries all the remote links of a particular issue.
Input  idOrKey - issue id or key. globalId - global application id (Optional). site - Optional, default: JIRA_SITE environment variable. failOnError - Optional. default: true.  Output  Each step generates generic output, please refer to this link for more information. The api response of this jira_get_remote_issuelinks step can be reused later in your script by doing response.</description>
    </item>
    
    <item>
      <title>GetProjectVersions</title>
      <link>https://jenkinsci.github.io/jira-steps-plugin/steps/project/jira_get_project_versions/</link>
      <pubDate>Sun, 12 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jenkinsci.github.io/jira-steps-plugin/steps/project/jira_get_project_versions/</guid>
      <description>jiraGetProjectVersions This step queries all the versions of a particular project.
Input  idOrKey - project id or key. site - Optional, default: JIRA_SITE environment variable. failOnError - Optional. default: true.  Output  Each step generates generic output, please refer to this link for more information. The api response of this jira_get_project_versions step can be reused later in your script by doing response.data.required_field_name. You can see some example scenarios here All the available fields for a jira response can be found in JIRA API documentation depending on your JIRA version.</description>
    </item>
    
    <item>
      <title>NewRemoteIssueLink</title>
      <link>https://jenkinsci.github.io/jira-steps-plugin/steps/issuelink/jira_new_remote_issuelink/</link>
      <pubDate>Sun, 12 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jenkinsci.github.io/jira-steps-plugin/steps/issuelink/jira_new_remote_issuelink/</guid>
      <description>jiraNewRemoteIssueLink This step creates a new remote link to a particular issue.
Input  idOrKey - issue id or key. remoteLink - remote link. site - Optional, default: JIRA_SITE environment variable. failOnError - Optional. default: true.  It supports all the fields that any jira instance supports including custom fields. For more information about all available input fields, please refer to the JIRA API documentation depending on your JIRA version.</description>
    </item>
    
    <item>
      <title>EditIssue</title>
      <link>https://jenkinsci.github.io/jira-steps-plugin/steps/issue/jira_edit_issue/</link>
      <pubDate>Sun, 12 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jenkinsci.github.io/jira-steps-plugin/steps/issue/jira_edit_issue/</guid>
      <description>jiraEditIssue Updates an existing issue based on given input, which should have some minimal information on that object.
Input  idOrKey - issue id or key. issue - issue to be updated. site - Optional, default: JIRA_SITE environment variable. failOnError - Optional. default: true.  It supports all the fields that any jira instance supports including custom fields. For more information about all available input fields, please refer to the JIRA API documentation depending on your JIRA version.</description>
    </item>
    
    <item>
      <title>LinkIssues</title>
      <link>https://jenkinsci.github.io/jira-steps-plugin/steps/issuelink/jira_link_issues/</link>
      <pubDate>Sun, 12 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jenkinsci.github.io/jira-steps-plugin/steps/issuelink/jira_link_issues/</guid>
      <description>jiraLinkIssues This step links two issues in the provided JIRA site.
Hint: Try getIssueLinkTypes to know the type.
Input  type - type of the link. (Ex: Relates, Blocks, Cloners, Duplicate) inwardKey - inward issue key. outwardKey - outward issue key. site - Optional, default: JIRA_SITE environment variable. failOnError - Optional. default: true.  It supports all the fields that any jira instance supports including custom fields. For more information about all available input fields, please refer to the JIRA API documentation depending on your JIRA version.</description>
    </item>
    
    <item>
      <title>DeleteIssueLink</title>
      <link>https://jenkinsci.github.io/jira-steps-plugin/steps/issuelink/jira_delete_issuelink/</link>
      <pubDate>Sun, 12 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jenkinsci.github.io/jira-steps-plugin/steps/issuelink/jira_delete_issuelink/</guid>
      <description>jiraDeleteIssueLink This step deletes an issue link.
Input  id - issue link&amp;rsquo;s id. site - Optional, default: JIRA_SITE environment variable. failOnError - Optional. default: true.  It supports all the fields that any jira instance supports including custom fields. For more information about all available input fields, please refer to the JIRA API documentation depending on your JIRA version.
 Output  Each step generates generic output, please refer to this link for more information.</description>
    </item>
    
    <item>
      <title>GetIssueTransitions</title>
      <link>https://jenkinsci.github.io/jira-steps-plugin/steps/issue/jira_get_issue_transitions/</link>
      <pubDate>Sun, 12 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jenkinsci.github.io/jira-steps-plugin/steps/issue/jira_get_issue_transitions/</guid>
      <description>jiraGetIssueTransitions This step queries all transitions of a particular issue.
Input  idOrKey - Issue id or key. site - Optional, default: JIRA_SITE environment variable. failOnError - Optional. default: true.  For more information about input, please refer to the model objects in the API package.
 Output  Each step generates generic output, please refer to this link for more information. The api response of this jira_get_issue_transitions step can be reused later in your script by doing response.</description>
    </item>
    
    <item>
      <title>DeleteRemoteIssueLink</title>
      <link>https://jenkinsci.github.io/jira-steps-plugin/steps/issuelink/jira_delete_remote_issuelink/</link>
      <pubDate>Sun, 12 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jenkinsci.github.io/jira-steps-plugin/steps/issuelink/jira_delete_remote_issuelink/</guid>
      <description>jiraDeleteRemoteIssueLink This step deletes a particular remote link of an issue.
Input  idOrKey - issue id or key. linkId - remote link id. site - Optional, default: JIRA_SITE environment variable. failOnError - Optional. default: true.  It supports all the fields that any jira instance supports including custom fields. For more information about all available input fields, please refer to the JIRA API documentation depending on your JIRA version.</description>
    </item>
    
    <item>
      <title>NotifyIssue</title>
      <link>https://jenkinsci.github.io/jira-steps-plugin/steps/issue/jira_notify_issue/</link>
      <pubDate>Sun, 12 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jenkinsci.github.io/jira-steps-plugin/steps/issue/jira_notify_issue/</guid>
      <description>jiraNotifyIssue This step notifies users (like watchers, assignee and so on..) of a particular issue.
Input  idOrKey - Issue id or key. notify - more info about whom should we notify and so on. site - Optional, default: JIRA_SITE environment variable. failOnError - Optional. default: true.  It supports all the fields that any jira instance supports including custom fields. For more information about all available input fields, please refer to the JIRA API documentation depending on your JIRA version.</description>
    </item>
    
    <item>
      <title>DeleteRemoteIssueLinks</title>
      <link>https://jenkinsci.github.io/jira-steps-plugin/steps/issuelink/jira_delete_remote_issuelinks/</link>
      <pubDate>Sun, 12 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jenkinsci.github.io/jira-steps-plugin/steps/issuelink/jira_delete_remote_issuelinks/</guid>
      <description>jiraDeleteRemoteIssueLinks This step deletes all remote links of an issue.
Input  idOrKey - issue id or key. globalId - global application id (Optional). site - Optional, default: JIRA_SITE environment variable. failOnError - Optional. default: true.  It supports all the fields that any jira instance supports including custom fields. For more information about all available input fields, please refer to the JIRA API documentation depending on your JIRA version.</description>
    </item>
    
    <item>
      <title>TransitionIssue</title>
      <link>https://jenkinsci.github.io/jira-steps-plugin/steps/issue/jira_transition_issue/</link>
      <pubDate>Sun, 12 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jenkinsci.github.io/jira-steps-plugin/steps/issue/jira_transition_issue/</guid>
      <description>jiraTransitionIssue This step transitions a particular issue in the JIRA site.
Input  idOrKey - Issue id or key. input - comment, supports jira wiki formatting. site - Optional, default: JIRA_SITE environment variable. failOnError - Optional. default: true.  It supports all the fields that any jira instance supports including custom fields. For more information about all available input fields, please refer to the JIRA API documentation depending on your JIRA version.</description>
    </item>
    
    <item>
      <title>Change Log</title>
      <link>https://jenkinsci.github.io/jira-steps-plugin/changelog/</link>
      <pubDate>Sun, 12 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jenkinsci.github.io/jira-steps-plugin/changelog/</guid>
      <description>1.4.6 (Unreleased) 1.4.5  JENKINS-49394 Make add/edit comment step more generic to set a visibility. JENKINS-56074 Use &amp;lsquo;null&amp;rsquo; as assignee to set an issue to unassigned.  1.4.4  JENKINS-53044 Add step to retrieve jira server info.  Thank you Stuart Rowe for the initial pull request.   1.4.3  JENKINS-50764 Whitelist ResponseData method signatures in In-process script approval.  With 1.4.2 only getData was added to the whitelist but here added rest.</description>
    </item>
    
    <item>
      <title>Contributing</title>
      <link>https://jenkinsci.github.io/jira-steps-plugin/contributing/</link>
      <pubDate>Sun, 12 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jenkinsci.github.io/jira-steps-plugin/contributing/</guid>
      <description>Help us to make this project better by contributing. Whether it&amp;rsquo;s new features, bug fixes, or simply improving documentation, your contributions are welcome. Please start with logging a JIRA and submit a pull request.
Before you contribute, please review these guidelines to help ensure a smooth process for everyone. Thanks :).
Copyright JIRA Steps plugins is licensed under Apache License, Version 2.0
Issue reporting  Please browse our existing issues before logging new issues.</description>
    </item>
    
    <item>
      <title>Credits</title>
      <link>https://jenkinsci.github.io/jira-steps-plugin/credits/</link>
      <pubDate>Sun, 12 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jenkinsci.github.io/jira-steps-plugin/credits/</guid>
      <description>Maintainers  Owner - Naresh Rayapati.  github contributors .ghContributors{ display:flex; flex-flow: wrap; align-content: flex-start } .ghContributors  div{ width: 50% ; display: inline-flex; margin-bottom: 5px; } .ghContributors  div label{ padding-left: 4px ; } .ghContributors  div span{ font-size: x-small; padding-left: 4px ; }   @nrayapati 106 commits   @benjidea 2 commits   @abayer 1 commits   @jpgauthier 1 commits   @samrocketman 1 commits   @abeeskau 1 commits   @bhram999 1 commits   @merykozlowska 1 commits   Help us to make this project better by contributing.</description>
    </item>
    
    <item>
      <title>Terms and Privacy Policy</title>
      <link>https://jenkinsci.github.io/jira-steps-plugin/terms/</link>
      <pubDate>Sun, 12 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jenkinsci.github.io/jira-steps-plugin/terms/</guid>
      <description>The privacy of visitors is extremely important to us (maintainers). This Privacy Policy outlines the types of personal information that is received and collected and how it is used.
First and foremost, we will never share your personal information to anyone without your direct consent.
Google Analytics Google Analytics is a web analytics tool we use to help understand how visitors engage with this website. This is purely to encourage ourself to work more on this plugin and provide more functionally.</description>
    </item>
    
    <item>
      <title>header</title>
      <link>https://jenkinsci.github.io/jira-steps-plugin/_header/</link>
      <pubDate>Sun, 12 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jenkinsci.github.io/jira-steps-plugin/_header/</guid>
      <description>Jenkins JIRA Pipeline Steps</description>
    </item>
    
    <item>
      <title></title>
      <link>https://jenkinsci.github.io/jira-steps-plugin/_footer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkinsci.github.io/jira-steps-plugin/_footer/</guid>
      <description>Copyright © 2017-2018 Naresh Rayapati.</description>
    </item>
    
  </channel>
</rss>